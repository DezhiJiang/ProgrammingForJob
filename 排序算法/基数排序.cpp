#include<iostream>
#include<vector>

using namespace std;

//常见的数据元素一般是由若干位组成的，比如字符串由若干字符组成，整数由若干位0~9数字组成。
//基数排序按照从右往左的顺序，依次将每一位都当做一次关键字，然后按照该关键字对数组排序，每一轮排序都基于上轮排序后的结果；
//最后一轮，最左边那位也作为关键字并排序，整个数组就达到有序状态。
//比如对于数字2985，从右往左就是先以个位为关键字进行排序，然后是十位、百位、千位，总共需要四轮。
//一定要注意每一轮排序中排序方法必须是稳定的。否则基数排序不能得到正确的结果。

//这种排序算法的时间复杂度为Θ(d(n + k))，这种排序基于我们之前将的计数排序，其中n表示待排序列的规模，d表示待排序列的最大位数，k表示每一位数的范围，这也是一种时间换空间的算法。